!function(o,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common"),require("@angular/material"),require("@angular/flex-layout")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/forms","@angular/common","@angular/material","@angular/flex-layout"],t):t(o["ngx-formify-material"]={},o.ng.core,o.ng.forms,o.ng.common,o.material,o.flexLayout)}(this,function(o,t,r,n,e,l){"use strict";function c(o,t,r,n){var e,l=arguments.length,c=l<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(o,t,r,n);else for(var a=o.length-1;a>=0;a--)(e=o[a])&&(c=(l<3?e(c):l>3?e(t,r,c):e(t,r))||c);return l>3&&c&&Object.defineProperty(t,r,c),c}var a=function(){function o(){this.formClass="",this.controlClass="",this.controlInnerClass="",this.onFileSelected=new t.EventEmitter,this.keys=[]}return o.prototype.ngOnInit=function(){this.keys=Object.keys(this.formGroup.controls)},o.prototype.ngOnChanges=function(o){this.keys=Object.keys(this.formGroup.controls),console.log(o)},o.prototype.fileSelected=function(o,t){this.onFileSelected.emit({files:o,formControlName:t})},c([t.Input()],o.prototype,"formGroup",void 0),c([t.Input()],o.prototype,"formClass",void 0),c([t.Input()],o.prototype,"controlClass",void 0),c([t.Input()],o.prototype,"controlInnerClass",void 0),c([t.Output()],o.prototype,"onFileSelected",void 0),o=c([t.Component({selector:"formify",template:'<form class="formify" [class]="formClass">\n\t<ng-container *ngFor="let control of keys">\n\t\t<ng-container *ngIf="formGroup.controls[control].controlType === \'Input\' || formGroup.controls[control].controlType === \'TextArea\' || formGroup.controls[control].controlType === \'Password\'">\n\t\t\t<mat-form-field class="formify-input" *ngIf="formGroup.controls[control].flex" [fxFlex]="formGroup.controls[control].flex">\n\t\t\t\t<input matInput *ngIf="formGroup.controls[control].controlType === \'Input\'" [formControl]="formGroup.controls[control]" type="text" [placeholder]="formGroup.controls[control].placeholder" />\n\t\t\t\t<textarea matInput *ngIf="formGroup.controls[control].controlType === \'TextArea\'" [placeholder]="formGroup.controls[control].placeholder" [formControl]="formGroup.controls[control]"></textarea>\n\t\t\t\t<input matInput *ngIf="formGroup.controls[control].controlType === \'Password\'" [formControl]="formGroup.controls[control]" type="password" [placeholder]="formGroup.controls[control].placeholder" />\n\t\t\t</mat-form-field>\n\t\t\t<mat-form-field class="formify-input" *ngIf="!formGroup.controls[control].flex">\n\t\t\t\t<input matInput *ngIf="formGroup.controls[control].controlType === \'Input\'" [formControl]="formGroup.controls[control]" type="text" [placeholder]="formGroup.controls[control].placeholder" />\n\t\t\t\t<textarea matInput *ngIf="formGroup.controls[control].controlType === \'TextArea\'" [placeholder]="formGroup.controls[control].placeholder" [formControl]="formGroup.controls[control]"></textarea>\n\t\t\t\t<input matInput *ngIf="formGroup.controls[control].controlType === \'Password\'" [formControl]="formGroup.controls[control]" type="password" [placeholder]="formGroup.controls[control].placeholder" />\n\t\t\t</mat-form-field>\n\t\t</ng-container>\n\n\t\t<mat-select class="formify-input" *ngIf="formGroup.controls[control].controlType === \'Select\' && formGroup.controls[control].flex" [formControl]="formGroup.controls[control]" [fxFlex]="formGroup.controls[control].flex">\n\t\t\t<mat-option *ngFor="let option of formGroup.controls[control].options" [value]="option.data">{{option.label}}</mat-option>\n\t\t</mat-select>\n\t\t<mat-select class="formify-input" *ngIf="formGroup.controls[control].controlType === \'Select\' && !formGroup.controls[control].flex" [formControl]="formGroup.controls[control]">\n\t\t\t<mat-option *ngFor="let option of formGroup.controls[control].options" [value]="option.data">{{option.label}}</mat-option>\n\t\t</mat-select>\n\t\t\n\t\t<mat-radio-group class="formify-input" *ngIf="formGroup.controls[control].controlType === \'Radio\' && formGroup.controls[control].flex" [formControl]="formGroup.controls[control]" [fxFlex]="formGroup.controls[control].flex">\n\t\t\t<mat-radio-button *ngFor="let option of formGroup.controls[control].options" class="formify-radio-line" [value]="option.data">{{option.label}}</mat-radio-button>\n\t\t</mat-radio-group>\n\t\t<mat-radio-group class="formify-input" *ngIf="formGroup.controls[control].controlType === \'Radio\' && !formGroup.controls[control].flex" [formControl]="formGroup.controls[control]">\n\t\t\t<mat-radio-button *ngFor="let option of formGroup.controls[control].options" class="formify-radio-line" [value]="option.data">{{option.label}}</mat-radio-button>\n\t\t</mat-radio-group>\n\n\t\t<mat-checkbox class="formify-input" *ngIf="formGroup.controls[control].controlType === \'Checkbox\' && formGroup.controls[control].flex" [formControl]="formGroup.controls[control]" [fxFlex]="formGroup.controls[control].flex">{{formGroup.controls[control].placeholder}}</mat-checkbox>\n\t\t<mat-checkbox class="formify-input" *ngIf="formGroup.controls[control].controlType === \'Checkbox\' && !formGroup.controls[control].flex" [formControl]="formGroup.controls[control]">{{formGroup.controls[control].placeholder}}</mat-checkbox>\n\n\t\t<input *ngIf="formGroup.controls[control].controlType === \'File\'" [formControl]="formGroup.controls[control]" type="file" (change)="fileSelected( $event.target.files )" />\n\t</ng-container>\n</form>'})],o)}(),f=function(o){function t(){return null!==o&&o.apply(this,arguments)||this}return function(o,t){function r(){this.constructor=o}for(var n in t)t.hasOwnProperty(n)&&(o[n]=t[n]);o.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}(t,o),t}(r.FormControl),p=function(){function o(){}return o.prototype.build=function(o){var t,n=new r.FormGroup({});if(o&&(t=new o),t){var e=[],l=!0;for(var c in t){var a=t[c+"-form-metadata"];a&&(e.push(a),a.order&&(l=!1))}l||(e=e.sort(function(o,t){return(void 0!==o.order?o.order:Number.MAX_VALUE)-(void 0!==t.order?t.order:Number.MAX_VALUE)})),e.forEach(function(o){var t=new f;t.setValue(o.defaultValue||""),t.setValidators(o.validators||[]),t.placeholder=o.placeholder||"",t.controlType=o.type,t.options=o.options,t.flex=o.flex,n.addControl(o.name,t)})}return n},o=c([t.Injectable()],o)}(),u=function(){function o(){}return o=c([t.NgModule({imports:[n.CommonModule,r.FormsModule,r.ReactiveFormsModule,e.MatInputModule,e.MatSelectModule,e.MatRadioModule,e.MatCheckboxModule,l.FlexLayoutModule],declarations:[a],providers:[p],exports:[a]})],o)}();!function(o){o.Input="Input",o.TextArea="TextArea",o.Select="Select",o.Radio="Radio",o.Checkbox="Checkbox",o.Password="Password",o.File="File"}(o.FormControlType||(o.FormControlType={}));o.FormifyModule=u,o.FormComponent=a,o.FormGroupService=p,o.FormControl=function(o,t){var r=t||{};return function(t,n){Object.defineProperties(t,(e={},e[n+"-form-metadata"]={value:{name:n,type:o,order:r.order,placeholder:r.placeholder,validators:r.validators,defaultValue:r.defaultValue,flex:r.flex},enumerable:!1,configurable:!1},e));var e}},o.FormSelectControl=function(o,t,r){return function(n,e){var l=r||{};Object.defineProperties(n,(c={},c[e+"-form-metadata"]={value:{name:e,type:o,order:l.order,validators:l.validators,defaultValue:l.defaultValue,options:t},enumerable:!1,configurable:!1},c));var c}},o.FormFileControl=function(t){var r=t||{};return function(t,n){Object.defineProperties(t,(e={},e[n+"-form-metadata"]={value:{name:n,type:o.FormControlType.File,order:r.order},enumerable:!1,configurable:!1},e));var e}},Object.defineProperty(o,"__esModule",{value:!0})});